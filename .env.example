# ⚠️ IMPORTANT: Copy this to .env and fill in your actual values# Environment Configuration - Solo Developer Edition

# The .env file is in .gitignore and will NEVER be uploaded to GitHubNODE_ENV=development



# ==============================================================================# Server

# DATABASE CONFIGURATIONPORT=8001

# ==============================================================================API_VERSION=v1

# PostgreSQL connection stringDEBUG=True

# Format: postgresql://username:password@host:port/database

DATABASE_URL=postgresql://postgres:YOUR_PASSWORD@localhost:5432/dpg_dev# Database (Your Local PostgreSQL)

# Change 'dpg_dev' to your database name, and username/password as needed

# ==============================================================================DATABASE_URL=postgresql://postgres:postgres@localhost:5432/dpg_dev

# SECURITY & AUTHENTICATIONDATABASE_POOL_SIZE=5

# ==============================================================================DATABASE_MAX_OVERFLOW=10

# Secret key for JWT tokens (generate a strong random string)

# You can generate one in Python: import secrets; print(secrets.token_urlsafe(32))# Redis (Local or Redis Cloud)

SECRET_KEY=your-super-secret-key-change-this-min-32-charactersREDIS_URL=redis://localhost:6379/0



# Wallet encryption key (Fernet key - generate with Python)# JWT Configuration

# Generate: from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())JWT_SECRET_KEY=your-secret-key-change-this-in-production-min-32-chars

WALLET_ENCRYPTION_KEY=your-fernet-encryption-key-hereJWT_ALGORITHM=HS256

JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30

# ==============================================================================JWT_REFRESH_TOKEN_EXPIRE_DAYS=7

# BLOCKCHAIN (Optional - for production)

# ==============================================================================# Encryption

# Leave empty for now - we'll add when integrating testnetsENCRYPTION_KEY=your-32-character-encryption-key!!

INFURA_PROJECT_ID=

ALCHEMY_API_KEY=# Blockchain - Ethereum (Testnet First!)

ETHEREUM_NETWORK=goerli

# ==============================================================================INFURA_PROJECT_ID=your-infura-project-id

# PAYMENT PROCESSING (Optional - for production)INFURA_PROJECT_SECRET=your-infura-secret

# ==============================================================================ALCHEMY_API_KEY=your-alchemy-api-key

# Stripe keys (use test mode keys)

STRIPE_SECRET_KEY=# Hot Wallet (FOR TESTING ONLY - Use testnet!)

STRIPE_PUBLISHABLE_KEY=HOT_WALLET_PRIVATE_KEY=your-hot-wallet-private-key-testnet-only



# ==============================================================================# Stripe (Test Mode)

# EMAIL SERVICE (Optional - for production)STRIPE_PUBLISHABLE_KEY=pk_test_your_publishable_key

# ==============================================================================STRIPE_SECRET_KEY=sk_test_your_secret_key

# SendGrid API key (free tier: 100 emails/day)STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret

SENDGRID_API_KEY=

EMAIL_FROM=noreply@yourdomain.com# Email (SendGrid Free Tier - 100/day)

SENDGRID_API_KEY=your-sendgrid-api-key

# ==============================================================================EMAIL_FROM=noreply@yourdomain.com

# APPLICATION SETTINGS

# ==============================================================================# Price Feed APIs (All Free!)

DEBUG=TrueCOINGECKO_API_KEY=

ENVIRONMENT=developmentCOINMARKETCAP_API_KEY=



# ==============================================================================# Security

# HOW TO SET UP:CORS_ORIGINS=http://localhost:3000,http://localhost:5173

# ==============================================================================RATE_LIMIT_PER_MINUTE=60

# 1. Copy this file: cp .env.example .env

# 2. Edit .env with your actual values# Feature Flags

# 3. NEVER commit .env to GitHub!ENABLE_TRADING=false

# 4. Keep your secrets safe!ENABLE_CARDS=false

ENABLE_MERCHANT=false

# Monitoring (Optional)
SENTRY_DSN=

# Development
LOG_LEVEL=DEBUG
